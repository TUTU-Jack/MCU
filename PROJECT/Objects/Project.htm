<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6180002: Last Updated: Wed Nov 16 11:45:41 2022
<BR><P>
<H3>Maximum Stack Usage =        116 bytes + Unknown(Functions without stacksize, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Uart_Init &rArr; UART_Init &rArr; System_GetClocksFreq
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[22]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[e]">ADC_Handler</a> from pt32f0xx_it.o(.text.ADC_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[7]">CLK_FAIL_Handler</a> from pt32f0xx_it.o(.text.CLK_FAIL_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[c]">Comparator0_Handler</a> from pt32f0xx_it.o(.text.Comparator0_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[d]">Comparator1_Handler</a> from pt32f0xx_it.o(.text.Comparator1_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[8]">FLASH_Handler</a> from pt32f0xx_it.o(.text.FLASH_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from pt32f0xx_it.o(.text.HardFault_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[17]">I2C0_Handler</a> from pt32f0xx_it.o(.text.I2C0_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[18]">I2C1_Handler</a> from pt32f0xx_it.o(.text.I2C1_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[14]">LED_Handler</a> from pt32f0xx_it.o(.text.LED_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[16]">LVD_Handler</a> from pt32f0xx_it.o(.text.LVD_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from pt32f0xx_it.o(.text.NMI_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[9]">PA_Handler</a> from pt32f0xx_it.o(.text.PA_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[a]">PB_Handler</a> from pt32f0xx_it.o(.text.PB_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[b]">PF_Handler</a> from pt32f0xx_it.o(.text.PF_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[15]">PVD_Handler</a> from pt32f0xx_it.o(.text.PVD_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from pt32f0xx_it.o(.text.PendSV_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_pt32f031.o(RESET) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[19]">SPI0_Handler</a> from pt32f0xx_it.o(.text.SPI0_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[1a]">SPI1_Handler</a> from pt32f0xx_it.o(.text.SPI1_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from pt32f0xx_it.o(.text.SVC_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[6]">SWDG_Handler</a> from pt32f0xx_it.o(.text.SWDG_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from pt32f0xx_it.o(.text.SysTick_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[1d]">SystemInit</a> from system_pt32f0xx.o(.text.SystemInit) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[10]">TIMER0_Handler</a> from pt32f0xx_it.o(.text.TIMER0_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[f]">TIMER1_Handler</a> from pt32f0xx_it.o(.text.TIMER1_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[13]">TIMER2_Handler</a> from pt32f0xx_it.o(.text.TIMER2_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[12]">TIMER3_Handler</a> from pt32f0xx_it.o(.text.TIMER3_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[11]">TIMER4_Handler</a> from pt32f0xx_it.o(.text.TIMER4_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[21]">TaskDisplayLED_B</a> from led.o(.text.TaskDisplayLED_B) referenced from task.o(.data.TaskComps)
 <LI><a href="#[20]">TaskDisplayLED_G</a> from led.o(.text.TaskDisplayLED_G) referenced from task.o(.data.TaskComps)
 <LI><a href="#[1f]">TaskDisplayLED_R</a> from led.o(.text.TaskDisplayLED_R) referenced from task.o(.data.TaskComps)
 <LI><a href="#[1b]">UART0_Handler</a> from pt32f0xx_it.o(.text.UART0_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[1c]">UART1_Handler</a> from pt32f0xx_it.o(.text.UART1_Handler) referenced from startup_pt32f031.o(RESET)
 <LI><a href="#[1e]">__main</a> from __main.o(!!!main) referenced from startup_pt32f031.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_pt32f031.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_pt32f031.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1e]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[25]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[5a]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[5b]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[26]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[5c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2a]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[5d]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[5e]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[5f]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[60]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[61]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[62]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[63]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[64]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[65]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[66]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[67]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[68]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[69]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[6a]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[6b]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[6c]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[6d]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[6e]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[6f]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[70]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[71]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[72]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[2f]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[73]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[74]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[75]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[76]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[77]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[78]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[79]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[24]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[7a]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[27]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[29]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[7b]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[2b]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 116 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Uart_Init &rArr; UART_Init &rArr; System_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[7c]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[3c]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[2e]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[7d]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[30]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 4 + Unknown Stack Size
<LI>Call Chain = __rt_exit_exit &rArr; _sys_exit
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[54]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[7e]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>__aeabi_idivmod</STRONG> (Thumb, 338 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Handler
</UL>

<P><STRONG><a name="[32]"></a>_dadd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>_dsub</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[84]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>_drsb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[4c]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Handler
</UL>

<P><STRONG><a name="[85]"></a>_dfix</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, dfixi.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Handler
</UL>

<P><STRONG><a name="[86]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Handler
</UL>

<P><STRONG><a name="[87]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Handler
</UL>

<P><STRONG><a name="[88]"></a>_dmul</STRONG> (Thumb, 558 bytes, Stack size 56 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[2d]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[89]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[8a]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[e]"></a>ADC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.ADC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>CLK_FAIL_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.CLK_FAIL_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>Comparator0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.Comparator0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>Comparator1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.Comparator1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>FLASH_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.FLASH_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>GPIO_ClearFlag</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pt32f0xx_gpio.o(.text.GPIO_ClearFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PA_Handler
</UL>

<P><STRONG><a name="[40]"></a>GPIO_GetFlagStatus</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, pt32f0xx_gpio.o(.text.GPIO_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PA_Handler
</UL>

<P><STRONG><a name="[3e]"></a>GPIO_Init</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, pt32f0xx_gpio.o(.text.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[57]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 100 bytes, Stack size 28 bytes, pt32f0xx_gpio.o(.text.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[51]"></a>GPIO_ReverseBits</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, pt32f0xx_gpio.o(.text.GPIO_ReverseBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_ReverseBits
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplayLED_B
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplayLED_G
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplayLED_R
</UL>

<P><STRONG><a name="[3f]"></a>GPIO_SetBits</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, pt32f0xx_gpio.o(.text.GPIO_SetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.I2C0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.I2C1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>LED_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.LED_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>LED_Init</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, led.o(.text.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LED_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16]"></a>LVD_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.LVD_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PA_Handler</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, pt32f0xx_it.o(.text.PA_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PA_Handler &rArr; TaskDisplayLED_R &rArr; UART_StringSend &rArr; UART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplayLED_R
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Cmd
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearFlag
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PB_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.PB_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PF_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.PF_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PVD_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.PVD_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>PWM_ClearFlag</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pt32f0xx_pwm.o(.text.PWM_ClearFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Handler
</UL>

<P><STRONG><a name="[42]"></a>PWM_Cmd</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, pt32f0xx_pwm.o(.text.PWM_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Handler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PA_Handler
</UL>

<P><STRONG><a name="[49]"></a>PWM_GetCaptureCounter</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, pt32f0xx_pwm.o(.text.PWM_GetCaptureCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PWM_GetCaptureCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Handler
</UL>

<P><STRONG><a name="[47]"></a>PWM_GetFlagStatus</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, pt32f0xx_pwm.o(.text.PWM_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PWM_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Handler
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.SPI0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.SPI1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SWDG_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.SWDG_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, pt32f0xx_it.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysTick_Handler &rArr; TaskRemarks
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRemarks
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SystemInit</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, system_pt32f0xx.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>System_GetClocksFreq</STRONG> (Thumb, 216 bytes, Stack size 20 bytes, pt32f0xx_sys.o(.text.System_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = System_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[46]"></a>Systick_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, systick.o(.text.Systick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Systick_Init &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10]"></a>TIMER0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.TIMER0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER1_Handler</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, pt32f0xx_it.o(.text.TIMER1_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TIMER1_Handler &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_GetCaptureCounter
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ClearFlag
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_GetFlagStatus
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Cmd
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIMER2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.TIMER2_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIMER3_Handler</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, pt32f0xx_it.o(.text.TIMER3_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TIMER3_Handler &rArr; TaskDisplayLED_R &rArr; UART_StringSend &rArr; UART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StringSend
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetFlagStatus
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplayLED_R
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIMER4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.TIMER4_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM_ClearFlag</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pt32f0xx_tim.o(.text.TIM_ClearFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_Handler
</UL>

<P><STRONG><a name="[4e]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, pt32f0xx_tim.o(.text.TIM_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_Handler
</UL>

<P><STRONG><a name="[21]"></a>TaskDisplayLED_B</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, led.o(.text.TaskDisplayLED_B))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TaskDisplayLED_B &rArr; UART_StringSend &rArr; UART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReverseBits
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StringSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(.data.TaskComps)
</UL>
<P><STRONG><a name="[20]"></a>TaskDisplayLED_G</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, led.o(.text.TaskDisplayLED_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TaskDisplayLED_G &rArr; UART_StringSend &rArr; UART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReverseBits
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StringSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(.data.TaskComps)
</UL>
<P><STRONG><a name="[1f]"></a>TaskDisplayLED_R</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, led.o(.text.TaskDisplayLED_R))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TaskDisplayLED_R &rArr; UART_StringSend &rArr; UART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReverseBits
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StringSend
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_Handler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PA_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(.data.TaskComps)
</UL>
<P><STRONG><a name="[59]"></a>TaskProcess</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, task.o(.text.TaskProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TaskProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>TaskRemarks</STRONG> (Thumb, 112 bytes, Stack size 4 bytes, task.o(.text.TaskRemarks))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TaskRemarks
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[1b]"></a>UART0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.UART0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>UART1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32f0xx_it.o(.text.UART1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32f031.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>UART_Cmd</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, pt32f0xx_uart.o(.text.UART_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[52]"></a>UART_Init</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, pt32f0xx_uart.o(.text.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = UART_Init &rArr; System_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[4d]"></a>UART_SendData</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, pt32f0xx_uart.o(.text.UART_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StringSend
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Handler
</UL>

<P><STRONG><a name="[50]"></a>UART_StringSend</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, pt32f0xx_uart.o(.text.UART_StringSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_StringSend &rArr; UART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplayLED_B
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplayLED_G
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_Handler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplayLED_R
</UL>

<P><STRONG><a name="[56]"></a>Uart_Init</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, uart.o(.text.Uart_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Uart_Init &rArr; UART_Init &rArr; System_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, pt32f0xx_retarget.o(.text._sys_exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[2c]"></a>main</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = main &rArr; Uart_Init &rArr; UART_Init &rArr; System_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskProcess
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systick_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[43]"></a>SysTick_Config</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, systick.o(.text.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systick_Init
</UL>

<P><STRONG><a name="[44]"></a>__NVIC_SetPriority</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, systick.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>

<P><STRONG><a name="[34]"></a>_dadd1</STRONG> (Thumb, 290 bytes, Stack size 20 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[33]"></a>_dsub1</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[3b]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
